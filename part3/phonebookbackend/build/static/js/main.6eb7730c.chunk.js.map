{"version":3,"sources":["services/persons.js","components/Notification.js","components/Filter.js","components/PersonForm.js","components/Persons.js","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","request","getAll","axios","get","then","response","data","create","newObject","post","console","log","catch","error","update","id","put","del","delete","Notification","message","content","status","notificationStyle","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","style","Filter","filter","handle","name","value","onChange","PersonForm","persons","number","handlePerson","handlePhone","handleSetPersons","handleSetName","handleSetNumber","handleNotif","messageNotification","setTimeout","onSubmit","event","preventDefault","person","length","some","window","confirm","personService","returnedPerson","map","undefined","concat","type","Persons","toUpperCase","includes","onClick","toString","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","errorMessage","setErrorMessage","useEffect","target","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6eb7730c.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  console.log(\"Create\")\r\n\r\n  return request.then(response => response.data)\r\n  .catch(error => error.response.data)\r\n    // this is the way to access the error message\r\n    //console.log(error.response.data)\r\n\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n  .catch(error => error.response.data)\r\n}\r\n\r\nconst del = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  console.log(\"urdDelete\",baseUrl,id)  \r\n  return request.then(response =>response)\r\n}\r\n\r\nconst request = { getAll, create, update, del}\r\n\r\nexport default request;","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n  \r\n  if(message === null)\r\n    return null\r\n\r\n  if((message.content === '' && message.status === ''))\r\n    return null\r\n  \r\n  const notificationStyle = { \r\n    color: message.status ===`success`?'green':'red',\r\n    background: 'lightgrey',\r\n    fontSize: 16,\r\n    borderStyle: 'solid',\r\n    borderRadius: '5px',\r\n    padding: '10px',\r\n    marginBottom: '10px'\r\n}\r\n\r\n  return (\r\n    <div style={notificationStyle}>\r\n      {message.content}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","const Filter = ({filter,handle}) =><div> filter show with<input name=\"filter\" value={filter}  onChange={handle}/></div>\r\n\r\nexport default Filter ","import personService from '../services/persons'\r\n\r\nconst PersonForm = ({persons,name,number,handlePerson,handlePhone,handleSetPersons,handleSetName,handleSetNumber,handleNotif}) => {\r\n  \r\n    const messageNotification = (message) =>{\r\n      handleNotif(message)\r\n      setTimeout(() => {\r\n        handleNotif(null)\r\n      }, 3000)\r\n    }\r\n\r\n  const addPerson = (event) => {    \r\n     event.preventDefault()\r\n      const person = persons.filter(person => person.name === name)\r\n      if(person.length === 1){\r\n        if(person.some(person => person.name === name)){\r\n            if (window.confirm(`${name} is already added is already added to phonebook, replace the old number with a new one?`))\r\n              personService.update(person[0].id,{ name , number })\r\n              .then(returnedPerson =>{ handleSetPersons(persons.map(person => person.id !== returnedPerson.id ? person: returnedPerson))\r\n                if(returnedPerson.error !== undefined)\r\n                  messageNotification({status:`fail`,content:returnedPerson.error})\r\n                else\r\n                  messageNotification({status:`success`,content:`Added ${name}`})\r\n                  handleSetName()\r\n                  handleSetNumber()\r\n              })\r\n        }\r\n      }else{              \r\n        personService\r\n          .create({ name , number })\r\n          .then(returnedPerson  => {\r\n            if(returnedPerson.error !== undefined)\r\n              messageNotification({status:`fail`,content:returnedPerson.error})\r\n            else{\r\n              handleSetPersons(persons.concat(returnedPerson))  \r\n              console.log('success')\r\n              console.log(returnedPerson)\r\n              messageNotification({status:`success`,content:`Added ${name}`})\r\n              handleSetName()\r\n              handleSetNumber()\r\n            }\r\n          })\r\n        }\r\n      }\r\n    return (\r\n    <div>\r\n      <form onSubmit={addPerson}>\r\n        <div>\r\n          name: <input name=\"name\" value={name}  onChange={handlePerson}/>\r\n        </div>\r\n        <div>\r\n          number: <input name=\"number\" value={number} onChange={handlePhone}/>\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default PersonForm\r\n","import personService from '../services/persons'\r\n//const Persons = ({persons,filter}) =><div>{persons.filter(name =>name.name.toUpperCase().includes(filter.toUpperCase())).map(person =><li key={person.name.toString()}> {person.name } {person.number}<button  type=\"button\" onClick={()=>personService.del(person.id).then(response =>{console.log(\"Reponse\",response)})}>delete</button></li>)}</div>\r\nconst Persons = ({persons,filter,handleNotif,handleSetPersons}) =>{\r\n\r\n    const messageNotification = (message) =>{\r\n        handleNotif(message)\r\n        setTimeout(() => {\r\n          handleNotif(null)\r\n        }, 3000)\r\n      }\r\n\r\n    const deletePerson = (id,name) => {    \r\n        if (window.confirm(`Delete ${name} ?`)){\r\n            //personService.del(id).then(response =>{response.status === 200?handleSetPersons():console.log(response.status)})        \r\n            personService.del(id)\r\n            .then(response =>{\r\n                handleSetPersons()\r\n                messageNotification({status:`success`,content:`Deleting of ${name}`})\r\n            })\r\n            .catch(error => {\r\n                handleSetPersons()\r\n                messageNotification({status:`success`,content:`Error impossible Deleting of ${name}`})\r\n            })\r\n        }\r\n    }\r\n    if( persons !== undefined){\r\n        return (\r\n            <div>\r\n                {persons.filter(name =>name.name.toUpperCase().includes(filter.toUpperCase()))\r\n                    .map(person =>\r\n                    <li key={person.name.toString()}> {person.name } {person.number}\r\n                        <button  type=\"button\" onClick={()=>deletePerson(person.id,person.name)}>delete</button>\r\n                    </li>\r\n                    )}\r\n            </div>)\r\n    }\r\n}\r\nexport default Persons","import React, { useState, useEffect } from 'react'\r\nimport personService from './services/persons'\r\nimport Notification from './components/Notification'\r\nimport Filter from './components/Filter'\r\nimport PersonForm from './components/PersonForm'\r\nimport Persons from './components/Persons'\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons ] = useState([]) \r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber ] = useState('')\r\n  const [ newFilter, setNewFilter ] = useState('')\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n \r\n  useEffect(() => {\r\n    personService     \r\n    .getAll()     \r\n    .then(data => {        \r\n      setPersons(data)\r\n    })\r\n  }, [])\r\n      \r\n  const handleFilterChange = (event) => {\r\n    if(event.target.name === 'filter')\r\n    setNewFilter(event.target.value)    \r\n    console.log( event.target.name ,event.target.value)\r\n  }\r\n\r\n  const handlePersonChange = (event) => {\r\n    if(event.target.name === 'name')\r\n      setNewName(event.target.value)\r\n    console.log( event.target.name ,event.target.value)\r\n  }\r\n  \r\n  const handlePhoneChange = (event) => {\r\n    if(event.target.name === 'number')\r\n      setNewNumber(event.target.value)       \r\n    console.log( event.target.name ,event.target.value)\r\n  }\r\n  return(\r\n    <div>\r\n    <h2>Phonebook</h2>\r\n      <Notification message={errorMessage} />\r\n      <Filter filter={newFilter} handle={handleFilterChange} />\r\n    <h3>add a new</h3>\r\n      {<PersonForm persons={persons} name ={newName} number={newNumber} handlePerson={handlePersonChange} handlePhone={handlePhoneChange} handleSetPersons={setPersons} handleSetName={()=>setNewName('')} handleSetNumber={()=>setNewNumber('')} handleNotif={setErrorMessage}/>}\r\n      <h3>Numbers</h3>\r\n      {<Persons persons={persons} filter={newFilter} handleNotif={setErrorMessage} handleSetPersons={()=>personService.getAll().then(data =>{setPersons(data)})}/>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}